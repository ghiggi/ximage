# pyproject.toml

[build-system]
requires = ["setuptools>=61.0.0", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ximage"
description = "xarray-based tools for image/video processing"
readme = "README.md"
authors = [
	{ name = "Gionata Ghiggi", email = "gionata.ghiggi@epfl.ch" },
]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Operating System :: Unix",
    "Operating System :: Microsoft",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Image Processing",
]
keywords = ["image", "video", "labelling", "patch", "extraction"]
dependencies = [
    "xarray",
    "dask",
    "dask-image",
	"matplotlib",
    "scikit-image",
]
requires-python = ">=3.8"
dynamic = ["version"]

[project.optional-dependencies]
dev = ["pre-commit",
       "black", "black[jupyter]", "blackdoc", "ruff", "codespell",
       "pytest", "pytest-cov", "pytest-mock", "pydantic",
       "pip-tools", "bumpver", "twine",
       "setuptools>=61.0.0", "wheel",
       "sphinx", "sphinx-gallery", "sphinx_rtd_theme", "nbsphinx"]

[project.urls]
Homepage = "https://github.com/ghiggi/ximage"
Source = "https://github.com/ghiggi/ximage"
Tracker = "https://github.com/ghiggi/ximage/issues"
Documentation = "https://ximage.readthedocs.io"
changelog = "https://github.com/ghiggi/ximage/CHANGELOG.md"

[tool.setuptools_scm]
write_to = "ximage/_version.py"

[tool.setuptools]
license-files = ["LICENSE"]
packages = ["ximage"] # explicitly list the packages in modules

[tool.pytest.ini_options]
addopts = "--cov --cov-report term-missing --cov-report xml --cov-report lcov:lcov.info"

[tool.black]
line-length = 100
# skip-string-normalization = true
target-version = [
    "py37",
    "py38",
    "py39",
    "py310",
    "py311",
]

[tool.ruff]
select = ["F",
	  "E",
	  "I",
	  "W",
	  "UP",
	  "Q",
	  # "SIM",
	  # "PTH",
	  #"RET",
	 ]
ignore = ["E722"]
line-length = 120
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
# Exclude a variety of commonly ignored directories.
exclude = [
    "dev*",
    "ximage/test*",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.codespell]
    ignore-words-list = 'nD'
